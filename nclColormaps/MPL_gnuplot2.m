function [cmap] = MPL_gnuplot2(args)
% Edited: Nov. 11th, 2021
%
% Colormap Reference:
% https://www.ncl.ucar.edu/Document/Graphics/ColorTables/MPL_gnuplot2.shtml
%
% ncolors = 128
% cmap = MPL_gnuplot2()
% cmap = MPL_gnuplot2(argumentName, argumentValue)
% 
% INPUT ARGUMENTS:
%   Reverse - Boolean:      Value to Indicate if Colormap will be Reversed
%   Start   - Integer:      Start Index Value
%   End     - Integer:      End Index Value
%   Skip    - Int/Array:    Index Values to Skip
%   Step    - Integer:      Step Index Value
%   Total   - Integer:      Total Number of Colors Evenly Distributed
%   Repeat  - Integer:      Number of times to repeat a color value

arguments
    args.Start (1,1) {mustBeNumeric}
    args.End (1,1) {mustBeNumeric}
    args.Step (1,1) {mustBeNumeric}
    args.Total (1,1) {mustBeNumeric}
    args.Reverse
    args.Repeat
    args.Skip
end

cmap = [[0, 0, 0.015686];...
    [0, 0, 0.047059];...
    [0, 0, 0.078431];...
    [0, 0, 0.109804];...
    [0, 0, 0.141176];...
    [0, 0, 0.172549];...
    [0, 0, 0.203922];...
    [0, 0, 0.235294];...
    [0, 0, 0.266667];...
    [0, 0, 0.282353];...
    [0, 0, 0.329412];...
    [0, 0, 0.345098];...
    [0, 0, 0.392157];...
    [0, 0, 0.407843];...
    [0, 0, 0.454902];...
    [0, 0, 0.470588];...
    [0, 0, 0.517647];...
    [0, 0, 0.54902];...
    [0, 0, 0.564706];...
    [0, 0, 0.611765];...
    [0, 0, 0.643137];...
    [0, 0, 0.67451];...
    [0, 0, 0.690196];...
    [0, 0, 0.737255];...
    [0, 0, 0.768627];...
    [0, 0, 0.8];...
    [0, 0, 0.815686];...
    [0, 0, 0.862745];...
    [0, 0, 0.894118];...
    [0, 0, 0.92549];...
    [0, 0, 0.941176];...
    [0, 0, 0.988235];...
    [0.015319, 0, 1];...
    [0.039828, 0, 1];...
    [0.064338, 0, 1];...
    [0.088848, 0, 1];...
    [0.113358, 0, 1];...
    [0.125613, 0, 1];...
    [0.162377, 0, 1];...
    [0.186887, 0, 1];...
    [0.211397, 0, 1];...
    [0.235907, 0, 1];...
    [0.260417, 0, 1];...
    [0.284926, 0, 1];...
    [0.309436, 0, 1];...
    [0.321691, 0, 1];...
    [0.358456, 0, 1];...
    [0.382966, 0, 1];...
    [0.407475, 0, 1];...
    [0.431985, 0, 1];...
    [0.456495, 0, 1];...
    [0.481005, 0, 1];...
    [0.505515, 0, 1];...
    [0.51777, 0, 1];...
    [0.554534, 0.014902, 0.985098];...
    [0.579044, 0.030588, 0.969412];...
    [0.603554, 0.046275, 0.953725];...
    [0.628064, 0.061961, 0.938039];...
    [0.652574, 0.077647, 0.922353];...
    [0.677083, 0.093333, 0.906667];...
    [0.701593, 0.10902, 0.89098];...
    [0.713848, 0.116863, 0.883137];...
    [0.750613, 0.140392, 0.859608];...
    [0.775123, 0.156078, 0.843922];...
    [0.799632, 0.171765, 0.828235];...
    [0.824142, 0.187451, 0.812549];...
    [0.848652, 0.203137, 0.796863];...
    [0.873162, 0.218824, 0.781176];...
    [0.897672, 0.23451, 0.76549];...
    [0.922181, 0.250196, 0.749804];...
    [0.946691, 0.265882, 0.734118];...
    [0.971201, 0.281569, 0.718431];...
    [0.995711, 0.297255, 0.702745];...
    [1, 0.312941, 0.687059];...
    [1, 0.328627, 0.671373];...
    [1, 0.336471, 0.663529];...
    [1, 0.36, 0.64];...
    [1, 0.375686, 0.624314];...
    [1, 0.391373, 0.608627];...
    [1, 0.407059, 0.592941];...
    [1, 0.422745, 0.577255];...
    [1, 0.438431, 0.561569];...
    [1, 0.454118, 0.545882];...
    [1, 0.469804, 0.530196];...
    [1, 0.48549, 0.51451];...
    [1, 0.501176, 0.498824];...
    [1, 0.516863, 0.483137];...
    [1, 0.532549, 0.467451];...
    [1, 0.548235, 0.451765];...
    [1, 0.563922, 0.436078];...
    [1, 0.579608, 0.420392];...
    [1, 0.587451, 0.412549];...
    [1, 0.61098, 0.38902];...
    [1, 0.626667, 0.373333];...
    [1, 0.642353, 0.357647];...
    [1, 0.658039, 0.341961];...
    [1, 0.673725, 0.326275];...
    [1, 0.689412, 0.310588];...
    [1, 0.705098, 0.294902];...
    [1, 0.720784, 0.279216];...
    [1, 0.736471, 0.263529];...
    [1, 0.752157, 0.247843];...
    [1, 0.767843, 0.232157];...
    [1, 0.783529, 0.216471];...
    [1, 0.799216, 0.200784];...
    [1, 0.814902, 0.185098];...
    [1, 0.830588, 0.169412];...
    [1, 0.838431, 0.161569];...
    [1, 0.861961, 0.138039];...
    [1, 0.877647, 0.122353];...
    [1, 0.893333, 0.106667];...
    [1, 0.90902, 0.09098];...
    [1, 0.924706, 0.075294];...
    [1, 0.940392, 0.059608];...
    [1, 0.956078, 0.043922];...
    [1, 0.971765, 0.028235];...
    [1, 0.987451, 0.012549];...
    [1, 1, 0.019608];...
    [1, 1, 0.117647];...
    [1, 1, 0.215686];...
    [1, 1, 0.313725];...
    [1, 1, 0.411765];...
    [1, 1, 0.509804];...
    [1, 1, 0.558824];...
    [1, 1, 0.705882];...
    [1, 1, 0.803922];...
    [1, 1, 0.901961];...
    [1, 1, 1]];

if isfield(args, 'Reverse')
    if args.Reverse == true
        cmap = flipud(cmap);
    end
end

if isfield(args, 'Start')
    if isfield(args, 'End')
        if isfield(args, 'Skip')
            idx = args.Start:args.End;
            mem = ismember(idx, args.Skip);
            cmap = cmap(idx(~mem), :);
        else
            cmap = cmap(args.Start:args.End, :);
        end  
    elseif isfield(args, 'Skip')
        idx = args.Start:size(cmap,1);
        mem = ismember(idx, args.Skip);
        cmap = cmap(idx(~mem), :);
    else
        cmap = cmap(args.Start:end, :);
    end    
elseif isfield(args, 'End')
    if isfield(args, 'Skip')
        idx = 1:args.End;
        mem = ismember(idx, args.Skip);
        cmap = cmap(idx(~mem), :);
    else
        cmap = cmap(1:args.End, :);
    end
elseif isfield(args, 'Skip')
    idx = 1:size(cmap,1);
    mem = ismember(idx, args.Skip);
    cmap = cmap(idx(~mem), :);
end

if isfield(args, 'Step')
    cmap = cmap(1:args.Step:end, :);
end

if isfield(args, 'Total')
    values = round(linspace(1, size(cmap,1), args.Total));
    cmap = cmap(values, :);
end

if isfield(args, 'Repeat')
    idx = repelem(1:size(cmap,1), args.Repeat);
    cmap = cmap(idx, :);
end

end