function [cmap] = MPL_rainbow(args)
% Edited: Nov. 11th, 2021
%
% Colormap Reference
% https://www.ncl.ucar.edu/Document/Graphics/ColorTables/MPL_rainbow.shtml
%
% ncolors = 128
% cmap = MPL_rainbow()
% cmap = MPL_rainbow(argumentName, argumentValue)
% 
% INPUT ARGUMENTS:
%   Reverse - Boolean:      Value to Indicate if Colormap will be Reversed
%   Start   - Integer:      Start Index Value
%   End     - Integer:      End Index Value
%   Skip    - Int/Array:    Index Values to Skip
%   Step    - Integer:      Step Index Value
%   Total   - Integer:      Total Number of Colors Evenly Distributed
%   Repeat  - Integer:      Number of times to repeat a color value

arguments
    args.Start (1,1) {mustBeNumeric}
    args.End (1,1) {mustBeNumeric}
    args.Step (1,1) {mustBeNumeric}
    args.Total (1,1) {mustBeNumeric}
    args.Reverse
    args.Repeat
    args.Skip
end

cmap = [[0.492157, 0.01232, 0.999981];...
    [0.476471, 0.036951, 0.999829];...
    [0.460784, 0.061561, 0.999526];...
    [0.445098, 0.086133, 0.99907];...
    [0.429412, 0.110653, 0.998464];...
    [0.413725, 0.135105, 0.997705];...
    [0.398039, 0.159476, 0.996795];...
    [0.382353, 0.18375, 0.995734];...
    [0.366667, 0.207912, 0.994522];...
    [0.358824, 0.219946, 0.993859];...
    [0.335294, 0.255843, 0.991645];...
    [0.327451, 0.267733, 0.990831];...
    [0.303922, 0.303153, 0.988165];...
    [0.296078, 0.31487, 0.987202];...
    [0.272549, 0.349727, 0.984086];...
    [0.264706, 0.361242, 0.982973];...
    [0.241176, 0.395451, 0.97941];...
    [0.22549, 0.41796, 0.976848];...
    [0.217647, 0.429121, 0.975512];...
    [0.194118, 0.462204, 0.971281];...
    [0.178431, 0.483911, 0.968276];...
    [0.162745, 0.505325, 0.965124];...
    [0.154902, 0.515918, 0.963493];...
    [0.131373, 0.54722, 0.958381];...
    [0.115686, 0.567675, 0.954791];...
    [0.1, 0.587785, 0.951057];...
    [0.092157, 0.597707, 0.949135];...
    [0.068627, 0.626924, 0.943154];...
    [0.052941, 0.645928, 0.938988];...
    [0.037255, 0.66454, 0.93468];...
    [0.029412, 0.673696, 0.932472];...
    [0.005882, 0.700543, 0.925638];...
    [0.009804, 0.717912, 0.920906];...
    [0.02549, 0.734845, 0.916034];...
    [0.041176, 0.751332, 0.911023];...
    [0.056863, 0.767363, 0.905873];...
    [0.072549, 0.782928, 0.900587];...
    [0.080392, 0.790532, 0.897892];...
    [0.103922, 0.812622, 0.889604];...
    [0.119608, 0.826734, 0.88391];...
    [0.135294, 0.840344, 0.878081];...
    [0.15098, 0.853444, 0.87212];...
    [0.166667, 0.866025, 0.866025];...
    [0.182353, 0.878081, 0.8598];...
    [0.198039, 0.889604, 0.853444];...
    [0.205882, 0.895163, 0.850217];...
    [0.229412, 0.911023, 0.840344];...
    [0.245098, 0.920906, 0.833602];...
    [0.260784, 0.930229, 0.826734];...
    [0.276471, 0.938988, 0.81974];...
    [0.292157, 0.947177, 0.812622];...
    [0.307843, 0.954791, 0.805381];...
    [0.323529, 0.961826, 0.798017];...
    [0.331373, 0.965124, 0.79429];...
    [0.354902, 0.974139, 0.782928];...
    [0.370588, 0.97941, 0.775204];...
    [0.386275, 0.984086, 0.767363];...
    [0.401961, 0.988165, 0.759405];...
    [0.417647, 0.991645, 0.751332];...
    [0.433333, 0.994522, 0.743145];...
    [0.44902, 0.996795, 0.734845];...
    [0.456863, 0.997705, 0.730653];...
    [0.480392, 0.999526, 0.717912];...
    [0.496078, 0.999981, 0.709281];...
    [0.511765, 0.999829, 0.700543];...
    [0.527451, 0.99907, 0.691698];...
    [0.543137, 0.997705, 0.682749];...
    [0.558824, 0.995734, 0.673696];...
    [0.57451, 0.993159, 0.66454];...
    [0.590196, 0.98998, 0.655284];...
    [0.605882, 0.986201, 0.645928];...
    [0.621569, 0.981823, 0.636474];...
    [0.637255, 0.976848, 0.626924];...
    [0.652941, 0.971281, 0.617278];...
    [0.668627, 0.965124, 0.607539];...
    [0.676471, 0.961826, 0.602635];...
    [0.7, 0.951057, 0.587785];...
    [0.715686, 0.943154, 0.577774];...
    [0.731373, 0.93468, 0.567675];...
    [0.747059, 0.925638, 0.557489];...
    [0.762745, 0.916034, 0.54722];...
    [0.778431, 0.905873, 0.536867];...
    [0.794118, 0.895163, 0.526432];...
    [0.809804, 0.88391, 0.515918];...
    [0.82549, 0.87212, 0.505325];...
    [0.841176, 0.8598, 0.494656];...
    [0.856863, 0.846958, 0.483911];...
    [0.872549, 0.833602, 0.473094];...
    [0.888235, 0.81974, 0.462204];...
    [0.903922, 0.805381, 0.451244];...
    [0.919608, 0.790532, 0.440216];...
    [0.927451, 0.782928, 0.434676];...
    [0.95098, 0.759405, 0.41796];...
    [0.966667, 0.743145, 0.406737];...
    [0.982353, 0.726434, 0.395451];...
    [0.998039, 0.709281, 0.384106];...
    [1, 0.691698, 0.372702];...
    [1, 0.673696, 0.361242];...
    [1, 0.655284, 0.349727];...
    [1, 0.636474, 0.338158];...
    [1, 0.617278, 0.326539];...
    [1, 0.597707, 0.31487];...
    [1, 0.577774, 0.303153];...
    [1, 0.557489, 0.29139];...
    [1, 0.536867, 0.279583];...
    [1, 0.515918, 0.267733];...
    [1, 0.494656, 0.255843];...
    [1, 0.483911, 0.249883];...
    [1, 0.451244, 0.231948];...
    [1, 0.429121, 0.219946];...
    [1, 0.406737, 0.207912];...
    [1, 0.384106, 0.195845];...
    [1, 0.361242, 0.18375];...
    [1, 0.338158, 0.171626];...
    [1, 0.31487, 0.159476];...
    [1, 0.29139, 0.147302];...
    [1, 0.267733, 0.135105];...
    [1, 0.243914, 0.122888];...
    [1, 0.219946, 0.110653];...
    [1, 0.195845, 0.0984];...
    [1, 0.171626, 0.086133];...
    [1, 0.147302, 0.073853];...
    [1, 0.122888, 0.061561];...
    [1, 0.110653, 0.055411];...
    [1, 0.073853, 0.036951];...
    [1, 0.04926, 0.024637];...
    [1, 0.024637, 0.01232];...
    [1, 0, 0]];

if isfield(args, 'Reverse')
    if args.Reverse == true
        cmap = flipud(cmap);
    end
end

if isfield(args, 'Start')
    if isfield(args, 'End')
        if isfield(args, 'Skip')
            idx = args.Start:args.End;
            mem = ismember(idx, args.Skip);
            cmap = cmap(idx(~mem), :);
        else
            cmap = cmap(args.Start:args.End, :);
        end  
    elseif isfield(args, 'Skip')
        idx = args.Start:size(cmap,1);
        mem = ismember(idx, args.Skip);
        cmap = cmap(idx(~mem), :);
    else
        cmap = cmap(args.Start:end, :);
    end    
elseif isfield(args, 'End')
    if isfield(args, 'Skip')
        idx = 1:args.End;
        mem = ismember(idx, args.Skip);
        cmap = cmap(idx(~mem), :);
    else
        cmap = cmap(1:args.End, :);
    end
elseif isfield(args, 'Skip')
    idx = 1:size(cmap,1);
    mem = ismember(idx, args.Skip);
    cmap = cmap(idx(~mem), :);
end

if isfield(args, 'Step')
    cmap = cmap(1:args.Step:end, :);
end

if isfield(args, 'Total')
    values = round(linspace(1, size(cmap,1), args.Total));
    cmap = cmap(values, :);
end

if isfield(args, 'Repeat')
    idx = repelem(1:size(cmap,1), args.Repeat);
    cmap = cmap(idx, :);
end

end