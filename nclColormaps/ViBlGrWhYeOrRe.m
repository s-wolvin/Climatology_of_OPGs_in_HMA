function [cmap] = ViBlGrWhYeOrRe(args)
% Edited: Jan. 17th, 2022
%
% Colormap Reference:
% https://www.ncl.ucar.edu/Document/Graphics/ColorTables/ViBlGrWhYeOrRe.shtml
%
% ncolors = 101
% cmap = ViBlGrWhYeOrRe()
% cmap = ViBlGrWhYeOrRe(argumentName, argumentValue)
% 
% INPUT ARGUMENTS:
%   Reverse - Boolean:      Value to Indicate if Colormap will be Reversed
%   Start   - Integer:      Start Index Value
%   End     - Integer:      End Index Value
%   Skip    - Int/Array:    Index Values to Skip
%   Step    - Integer:      Step Index Value
%   Total   - Integer:      Total Number of Colors Evenly Distributed
%   Repeat  - Integer:      Number of times to repeat a color value

arguments
    args.Start (1,1) {mustBeNumeric}
    args.End (1,1) {mustBeNumeric}
    args.Step (1,1) {mustBeNumeric}
    args.Total (1,1) {mustBeNumeric}
    args.Reverse
    args.Repeat
    args.Skip
end

cmap = [[87, 0, 136];...
    [81, 0, 144];...
    [75, 0, 152];...
    [70, 0, 160];...
    [64, 0, 168];...
    [58, 0, 176];...
    [52, 0, 184];...
    [46, 0, 192];...
    [41, 0, 199];...
    [35, 0, 207];...
    [29, 0, 215];...
    [23, 0, 223];...
    [17, 0, 231];...
    [12, 0, 239];...
    [6, 0, 247];...
    [0, 0, 255];...
    [1, 11, 240];...
    [1, 22, 225];...
    [2, 34, 210];...
    [2, 45, 195];...
    [3, 56, 180];...
    [3, 67, 165];...
    [4, 78, 150];...
    [4, 90, 135];...
    [5, 101, 120];...
    [5, 112, 105];...
    [6, 123, 90];...
    [6, 134, 75];...
    [7, 145, 60];...
    [7, 157, 45];...
    [8, 168, 30];...
    [8, 179, 15];...
    [24, 184, 31];...
    [41, 189, 47];...
    [57, 194, 63];...
    [74, 199, 79];...
    [90, 204, 95];...
    [107, 209, 111];...
    [123, 214, 127];...
    [140, 220, 143];...
    [156, 225, 159];...
    [173, 230, 175];...
    [189, 235, 191];...
    [206, 240, 207];...
    [222, 245, 223];...
    [239, 250, 239];...
    [255, 255, 255];...
    [255, 255, 255];...
    [255, 255, 255];...
    [255, 255, 255];...
    [255, 255, 255];...
    [255, 255, 255];...
    [255, 255, 255];...
    [255, 255, 255];...
    [255, 255, 255];...
    [255, 255, 238];...
    [255, 255, 221];...
    [255, 255, 204];...
    [255, 255, 187];...
    [255, 255, 170];...
    [255, 255, 153];...
    [255, 255, 136];...
    [255, 255, 119];...
    [255, 255, 102];...
    [255, 255, 85];...
    [255, 255, 68];...
    [255, 255, 51];...
    [255, 255, 34];...
    [255, 255, 17];...
    [255, 255, 0];...
    [255, 249, 0];...
    [255, 244, 0];...
    [255, 238, 0];...
    [255, 233, 0];...
    [255, 227, 0];...
    [255, 221, 0];...
    [255, 216, 0];...
    [255, 210, 0];...
    [255, 204, 0];...
    [255, 199, 0];...
    [255, 193, 0];...
    [255, 188, 0];...
    [255, 182, 0];...
    [255, 176, 0];...
    [255, 171, 0];...
    [255, 165, 0];...
    [255, 154, 0];...
    [255, 143, 0];...
    [255, 132, 0];...
    [255, 121, 0];...
    [255, 110, 0];...
    [255, 99, 0];...
    [255, 88, 0];...
    [255, 77, 0];...
    [255, 66, 0];...
    [255, 55, 0];...
    [255, 44, 0];...
    [255, 33, 0];...
    [255, 22, 0];...
    [255, 11, 0];...
    [255, 0, 0]];


if isfield(args, 'Reverse')
    if args.Reverse == true
        cmap = flipud(cmap);
    end
end

if isfield(args, 'Start')
    if isfield(args, 'End')
        if isfield(args, 'Skip')
            idx = args.Start:args.End;
            mem = ismember(idx, args.Skip);
            cmap = cmap(idx(~mem), :);
        else
            cmap = cmap(args.Start:args.End, :);
        end  
    elseif isfield(args, 'Skip')
        idx = args.Start:size(cmap,1);
        mem = ismember(idx, args.Skip);
        cmap = cmap(idx(~mem), :);
    else
        cmap = cmap(args.Start:end, :);
    end    
elseif isfield(args, 'End')
    if isfield(args, 'Skip')
        idx = 1:args.End;
        mem = ismember(idx, args.Skip);
        cmap = cmap(idx(~mem), :);
    else
        cmap = cmap(1:args.End, :);
    end
elseif isfield(args, 'Skip')
    idx = 1:size(cmap,1);
    mem = ismember(idx, args.Skip);
    cmap = cmap(idx(~mem), :);
end

if isfield(args, 'Step')
    cmap = cmap(1:args.Step:end, :);
end

if isfield(args, 'Total')
    values = round(linspace(1, size(cmap,1), args.Total));
    cmap = cmap(values, :);
end

if isfield(args, 'Repeat')
    idx = repelem(1:size(cmap,1), args.Repeat);
    cmap = cmap(idx, :);
end

cmap = cmap ./ 255;

end