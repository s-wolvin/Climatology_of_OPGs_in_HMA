function [cmap] = BkBlAqGrYeOrReViWh200(args)
% Edited: Jan. 25th, 2022
%
% Colormap Reference:
% https://www.ncl.ucar.edu/Document/Graphics/ColorTables/BkBlAqGrYeOrReViWh200.shtml
%
% ncolors = 200
% cmap = BkBlAqGrYeOrReViWh200()
% cmap = BkBlAqGrYeOrReViWh200(argumentName, argumentValue)
% 
% INPUT ARGUMENTS:
%   Reverse - Boolean:      Value to Indicate if Colormap will be Reversed
%   Start   - Integer:      Start Index Value
%   End     - Integer:      End Index Value
%   Skip    - Int/Array:    Index Values to Skip
%   Step    - Integer:      Step Index Value
%   Total   - Integer:      Total Number of Colors Evenly Distributed
%   Repeat  - Integer:      Number of times to repeat a color value

arguments
    args.Start (1,1) {mustBeNumeric}
    args.End (1,1) {mustBeNumeric}
    args.Step (1,1) {mustBeNumeric}
    args.Total (1,1) {mustBeNumeric}
    args.Reverse
    args.Repeat
    args.Skip
end

cmap = [[0, 0, 0];...
    [0, 0, 10];...
    [0, 0, 20];...
    [0, 0, 31];...
    [0, 0, 41];...
    [0, 0, 51];...
    [0, 0, 61];...
    [0, 0, 71];...
    [0, 0, 82];...
    [0, 0, 92];...
    [0, 0, 102];...
    [0, 0, 112];...
    [0, 0, 122];...
    [0, 0, 133];...
    [0, 0, 143];...
    [0, 0, 153];...
    [0, 0, 163];...
    [0, 0, 173];...
    [0, 0, 184];...
    [0, 0, 194];...
    [0, 0, 204];...
    [0, 0, 214];...
    [0, 0, 224];...
    [0, 0, 235];...
    [0, 0, 245];...
    [0, 0, 255];...
    [0, 10, 255];...
    [0, 20, 255];...
    [0, 31, 255];...
    [0, 41, 255];...
    [0, 51, 255];...
    [0, 61, 255];...
    [0, 71, 255];...
    [0, 82, 255];...
    [0, 92, 255];...
    [0, 102, 255];...
    [0, 112, 255];...
    [0, 122, 255];...
    [0, 133, 255];...
    [0, 143, 255];...
    [0, 153, 255];...
    [0, 163, 255];...
    [0, 173, 255];...
    [0, 184, 255];...
    [0, 194, 255];...
    [0, 204, 255];...
    [0, 214, 255];...
    [0, 224, 255];...
    [0, 235, 255];...
    [0, 245, 255];...
    [0, 255, 255];...
    [0, 252, 245];...
    [1, 249, 236];...
    [1, 246, 226];...
    [1, 243, 217];...
    [2, 240, 207];...
    [2, 237, 197];...
    [2, 234, 188];...
    [3, 231, 178];...
    [3, 228, 169];...
    [3, 225, 159];...
    [4, 222, 149];...
    [4, 219, 140];...
    [4, 215, 130];...
    [4, 212, 121];...
    [5, 209, 111];...
    [5, 206, 101];...
    [5, 203, 92];...
    [6, 200, 82];...
    [6, 197, 73];...
    [6, 194, 63];...
    [7, 191, 53];...
    [7, 188, 44];...
    [7, 185, 34];...
    [8, 182, 25];...
    [8, 179, 15];...
    [18, 182, 14];...
    [28, 185, 14];...
    [38, 188, 13];...
    [48, 191, 13];...
    [57, 194, 12];...
    [67, 197, 11];...
    [77, 200, 11];...
    [87, 203, 10];...
    [97, 206, 10];...
    [107, 209, 9];...
    [117, 212, 8];...
    [127, 215, 8];...
    [136, 219, 7];...
    [146, 222, 7];...
    [156, 225, 6];...
    [166, 228, 5];...
    [176, 231, 5];...
    [186, 234, 4];...
    [196, 237, 4];...
    [206, 240, 3];...
    [215, 243, 2];...
    [225, 246, 2];...
    [235, 249, 1];...
    [245, 252, 1];...
    [255, 255, 0];...
    [255, 251, 0];...
    [255, 248, 0];...
    [255, 244, 0];...
    [255, 240, 0];...
    [255, 236, 0];...
    [255, 233, 0];...
    [255, 229, 0];...
    [255, 225, 0];...
    [255, 221, 0];...
    [255, 218, 0];...
    [255, 214, 0];...
    [255, 210, 0];...
    [255, 206, 0];...
    [255, 203, 0];...
    [255, 199, 0];...
    [255, 195, 0];...
    [255, 191, 0];...
    [255, 188, 0];...
    [255, 184, 0];...
    [255, 180, 0];...
    [255, 176, 0];...
    [255, 173, 0];...
    [255, 169, 0];...
    [255, 165, 0];...
    [255, 158, 0];...
    [255, 152, 0];...
    [255, 145, 0];...
    [255, 139, 0];...
    [255, 132, 0];...
    [255, 125, 0];...
    [255, 119, 0];...
    [255, 112, 0];...
    [255, 106, 0];...
    [255, 99, 0];...
    [255, 92, 0];...
    [255, 86, 0];...
    [255, 79, 0];...
    [255, 73, 0];...
    [255, 66, 0];...
    [255, 59, 0];...
    [255, 53, 0];...
    [255, 46, 0];...
    [255, 40, 0];...
    [255, 33, 0];...
    [255, 26, 0];...
    [255, 20, 0];...
    [255, 13, 0];...
    [255, 7, 0];...
    [255, 0, 0];...
    [248, 0, 5];...
    [242, 0, 11];...
    [235, 0, 16];...
    [228, 0, 22];...
    [221, 0, 27];...
    [215, 0, 33];...
    [208, 0, 38];...
    [201, 0, 44];...
    [195, 0, 49];...
    [188, 0, 54];...
    [181, 0, 60];...
    [174, 0, 65];...
    [168, 0, 71];...
    [161, 0, 76];...
    [154, 0, 82];...
    [147, 0, 87];...
    [141, 0, 92];...
    [134, 0, 98];...
    [127, 0, 103];...
    [121, 0, 109];...
    [114, 0, 114];...
    [107, 0, 120];...
    [100, 0, 125];...
    [94, 0, 131];...
    [87, 0, 136];...
    [94, 10, 141];...
    [100, 20, 146];...
    [107, 31, 150];...
    [114, 41, 155];...
    [121, 51, 160];...
    [127, 61, 165];...
    [134, 71, 169];...
    [141, 82, 174];...
    [147, 92, 179];...
    [154, 102, 184];...
    [161, 112, 188];...
    [168, 122, 193];...
    [174, 133, 198];...
    [181, 143, 203];...
    [188, 153, 207];...
    [195, 163, 212];...
    [201, 173, 217];...
    [208, 184, 222];...
    [215, 194, 226];...
    [221, 204, 231];...
    [228, 214, 236];...
    [235, 224, 241];...
    [242, 235, 245];...
    [248, 245, 250];...
    [255, 255, 255]];

if isfield(args, 'Reverse')
    if args.Reverse == true
        cmap = flipud(cmap);
    end
end

if isfield(args, 'Start')
    if isfield(args, 'End')
        if isfield(args, 'Skip')
            idx = args.Start:args.End;
            mem = ismember(idx, args.Skip);
            cmap = cmap(idx(~mem), :);
        else
            cmap = cmap(args.Start:args.End, :);
        end  
    elseif isfield(args, 'Skip')
        idx = args.Start:size(cmap,1);
        mem = ismember(idx, args.Skip);
        cmap = cmap(idx(~mem), :);
    else
        cmap = cmap(args.Start:end, :);
    end    
elseif isfield(args, 'End')
    if isfield(args, 'Skip')
        idx = 1:args.End;
        mem = ismember(idx, args.Skip);
        cmap = cmap(idx(~mem), :);
    else
        cmap = cmap(1:args.End, :);
    end
elseif isfield(args, 'Skip')
    idx = 1:size(cmap,1);
    mem = ismember(idx, args.Skip);
    cmap = cmap(idx(~mem), :);
end

if isfield(args, 'Step')
    cmap = cmap(1:args.Step:end, :);
end

if isfield(args, 'Total')
    values = round(linspace(1, size(cmap,1), args.Total));
    cmap = cmap(values, :);
end

if isfield(args, 'Repeat')
    idx = repelem(1:size(cmap,1), args.Repeat);
    cmap = cmap(idx, :);
end

cmap = cmap ./ 255;

end